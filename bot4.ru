import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import os

API_TOKEN = os.getenv("API_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ï—Å—Ç—å –ª–∏ –∂–∏–∑–Ω—å –Ω–∞ –ú–∞—Ä—Å–µ?")],
        [KeyboardButton(text="–ü—Ä–∏–≤–µ—Ç"), KeyboardButton(text="–ü–æ–º–æ—â—å")]
    ],
    resize_keyboard=True
)

# –û—Ç–≤–µ—Ç –Ω–∞ /start
@dp.message(F.text == "/start")
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç ü§ñ.\n–í—ã–±–∏—Ä–∞–π –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=kb)

# –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ï—Å—Ç—å –ª–∏ –∂–∏–∑–Ω—å –Ω–∞ –ú–∞—Ä—Å–µ?"
@dp.message(F.text == "–ï—Å—Ç—å –ª–∏ –∂–∏–∑–Ω—å –Ω–∞ –ú–∞—Ä—Å–µ?")
async def mars_answer(message: types.Message):
    await message.reply("–ò —Ç–∞–º –µ—ë –Ω–µ—Ç...")

# –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≤–µ—Ç"
@dp.message(F.text == "–ü—Ä–∏–≤–µ—Ç")
async def hello_answer(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫! üëã")

# –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ–º–æ—â—å"
@dp.message(F.text == "–ü–æ–º–æ—â—å")
async def help_answer(message: types.Message):
    await message.reply("–Ø –ø–æ–∫–∞ —É–º–µ—é –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã.\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏: –ú–∞—Ä—Å, –ü—Ä–∏–≤–µ—Ç, –ü–æ–º–æ—â—å.")

# –≠—Ö–æ-—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def echo(message: types.Message):
    await message.answer(message.text)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
